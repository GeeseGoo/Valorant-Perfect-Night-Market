# Generated by Selenium IDE
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains

# USER INPUT HERE
username = "INPUT USERNAME"
password = "INPUT PASSWORD"
total_accounts = "INPUT NUMBER OF ACCOUNTS HERE"


class TestValstore:
  def setup_method(self ):
    self.driver = webdriver.Chrome()
    self.vars = {}
    self.driver.implicitly_wait(2)

  def teardown_method(self):
    self.driver.quit()

  def test_valstore(self, username, password):
    self.driver.get("https://www.valorant.store/")
    self.driver.set_window_size(1920, 1080)
    try:
        self.driver.find_element_by_xpath('//*[@id="__next"]/div[4]/div/button').click()
    except:
        pass
    self.driver.find_element(By.CSS_SELECTOR, "a > span").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "a > span")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.NAME, "username").click()
    self.driver.find_element(By.NAME, "username").send_keys(username)
    self.driver.find_element(By.NAME, "password").click()
    self.driver.find_element(By.NAME, "password").send_keys(password)
    self.driver.find_element(By.CSS_SELECTOR, ".Login_loginButton__28vTJ > button").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".Login_loginButton__28vTJ > button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    time.sleep(3)
    self.driver.find_element(By.CSS_SELECTOR, ".NightMarket_nightmarketButton__q3Iim > img").click()
    
    # Open each tile of night market
    element = self.driver.find_element_by_xpath('//*[@id="__next"]/div[4]/div/div/div[2]/div[1]/div[1]')
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click().perform()

    element = self.driver.find_element_by_xpath('//*[@id="__next"]/div[4]/div/div/div[2]/div[2]/div[1]/div')
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click().perform()

    element = self.driver.find_element_by_xpath('//*[@id="__next"]/div[4]/div/div/div[2]/div[3]/div[1]')
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click().perform()

    element = self.driver.find_element_by_xpath('//*[@id="__next"]/div[4]/div/div/div[2]/div[4]/div[1]/div')
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click().perform()

    element = self.driver.find_element_by_xpath('//*[@id="__next"]/div[4]/div/div/div[2]/div[5]/div[1]')
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click().perform()

    element = self.driver.find_element_by_xpath('//*[@id="__next"]/div[4]/div/div/div[2]/div[6]/div[1]')
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click().perform()
    
    # Take a screenshot and output to the current directory. You can change the directory by adding it before username.png
    time.sleep(1.5)
    self.driver.save_screenshot(username+'.png')
    self.driver.find_element(By.CSS_SELECTOR, ".fa-times").click()
    self.driver.find_element(By.CSS_SELECTOR, ".Nav_user__1povI").click()
    self.driver.find_element(By.CSS_SELECTOR, ".Nav_dropdown__3e35A > li:nth-child(3)").click()


valstore = TestValstore()
valstore.setup_method()
accounts = [
]
for i in range(1, total_accounts):
    accounts.append(username+str(i))

for account in accounts:
  try:
      valstore.test_valstore(account, password)
      print(account + " WAS VALID")
  except:
    print(account + " was invalid")

valstore.teardown_method()
